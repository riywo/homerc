escape ^f^f

### Pandemonium
  # To  use mouse.   XT capability  is screen  specific, not  seen in  the system
  # termcap / terminfo.
  termcapinfo * XT

  # Z0/Z1 are also screen specific.
  termcapinfo xterm*|kterm*|screen* Z0=\E[?3h:Z1=\E[?3l

  # To use hardware status line
  termcapinfo xterm*|kterm*|screen* hs:ts=\E]0;:fs=\007:ds=\E]0;\007
  hardstatus on

  # To use 256 colors. AB/AF are also screen specific.
  termcapinfo xterm*|kterm*|screen* Co#256:pa#32767:AB=\E[48;5;%dm:AF=\E[38;5;%dm
  defbce on

  # To use resize-window
  termcapinfo xterm*|kterm*|screen* is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l


### Display
  # $TERM (For 256 colors, screen needs --enable-colors256 configure option)
  term xterm

  # Wait seconds for messages
  msgwait 2
  msgminwait 0

  # Last line status (clock, window list, hostname)
  hardstatus alwayslastline "%{= .y}%m/%d %02c:%s | %{-}%L=%-w%40L>%{=bu rW}%n %t%{-}%+w %-10<%=%{= .y}(%H)"

  # Caption for each window (window num, flag, title)
  caption always "%?%F%{= gk}%:%{= KW}%?%2n%f%07=%t"
   
  # Change screen output style
  rendition so "=rb" ".G"


### Buffer and log
  # scroll buffer (lines)
  defscrollback 10240

  # buffer byte size of screen?
  termcapinfo xterm* OL=8196

  # logging
  deflog on
  logfile "var/log/screen/%Y%m%d-%n.log"


### Behavior
  # New window uses home dir
  chdir

  # Confirm when a window is finished
  zombie kr

  # Protection from attacks
  multiuser off
  idle off

  # No visible bell
  vbell off

  # Use autodetach because of using unstable client
  autodetach on

  # No startup message
  startup_message off

  # No login, otherwise /var/run/utemp will be squashed.
  deflogin off

  # Alternate screen for vim, less, etc.
  altscreen on


### Key bind
  bind w windowlist -b
  bind ^] paste [.]

  # Ctrl+cursor down, right, left for new screen and move
  bindkey "^[[1;5A" colon 'screen 1 sssh '
  bindkey "^[[1;5B" screen 1
  bindkey "^[[1;5C" next
  bindkey "^[[1;5D" prev

  # Change encodeing
  bind U eval 'encoding utf8 utf8'  'echo "change UTF-8"'
  bind E eval 'encoding eucjp utf8' 'echo "change eucJP"'
  bind S eval 'encoding sjis utf8'  'echo "change SJIS"'

  # Split key bind
  bind s eval split focus screen
  bind v eval "split -v" focus screen
  bind o only
  bind r remove

  # Shift+cursor for focus
  bindkey "^[[1;2A" focus up
  bindkey "^[[1;2B" focus down
  bindkey "^[[1;2C" focus right
  bindkey "^[[1;2D" focus left

  # Ctrl+Shift+cursor for resize
  bindkey "^[[1;6A" resize -v -l +1
  bindkey "^[[1;6B" resize -v -l -1
  bindkey "^[[1;6C" resize -h -l -1
  bindkey "^[[1;6D" resize -h -l +1

  # Use cursor in copy mode
  markkeys h=^B:l=^F:$=^E:^U=^Z:^D=^V

  # Layout shortcut
  bind 1 eval 'layout select 1' 'layout show'
  bind 2 eval 'layout select 2' 'layout show'
  bind 3 eval 'layout select 3' 'layout show'
  bind 4 eval 'layout select 4' 'layout show'
  bind 5 eval 'layout select 5' 'layout show'
  bind 6 eval 'layout select 6' 'layout show'
  bind 7 eval 'layout select 7' 'layout show'
  bind 8 eval 'layout select 8' 'layout show'
  bind 9 eval 'layout select 9' 'layout show'

  # Layout operation mode
  bind ^L eval 'command -c layout' 'layout show'
  bind -c layout c eval 'layout new 1' 'select 1' 'echo "Create new layout"'
  bind -c layout r eval 'layout remove' 'echo "Remove layout"'
  bind -c layout n eval 'layout next' 'command -c layout' 'layout show'
  bind -c layout p eval 'layout prev' 'command -c layout' 'layout show'


### Initial layout
  screen 1
  screen 2

  layout new 1:one
  select 1

  layout new 2:two-
  select 1
  split
  focus down
  select 2
  focus up

  layout new 3:two|
  select 1
  split -v
  focus right
  select 2
  focus left

  layout select 1
